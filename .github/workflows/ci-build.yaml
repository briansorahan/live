name: CI Build
on:
  push:
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
jobs:
  build_python_client:
    name: Build Python Client
    runs-on: ubuntu-latest
    permissions: write-all
    container:
      image: "python:3.13.1-bookworm"
    steps:
      - uses: actions/checkout@v2
      - name: Install and build
        run: |
          pip install uv==0.5.11
          export PYTHONPATH="$GITHUB_WORKSPACE"
          uv run invoke build
      - name: Build test coverage file
        run: |
          uv run pytest --cov=crispy_code --cov-report=xml
      - name: Upload coverage reports to Codecov (python)
        uses: codecov/codecov-action@main
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
  build_plugin:
    name: Build Plugin
    runs-on: ubuntu-latest
    container:
      image: "rust:1.83.0-bullseye"
    steps:
      - uses: actions/checkout@v2
      - name: Install and build
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Cinstrument-coverage'
          LLVM_PROFILE_FILE: 'cargo-test-%p-%m.profraw'
        run: |
          rustup component add llvm-tools-preview clippy
          cargo test --package crispy_code
          cargo install grcov
          mkdir -p target/coverage
          grcov . --binary-path ./target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o target/coverage/tests.lcov
      - name: Upload coverage reports to Codecov (rust)
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/coverage/tests.lcov
